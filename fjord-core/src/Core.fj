module Core

import core.Glue


enum Bool
  False : Bool
  True : Bool


record Equals a
  equals : a -> a -> Bool


implicit
boolEqualsInstance : Equals Bool
boolEqualsInstance =
  Equals boolEquals


(==) : a. Equals a => a -> a -> Bool
(==) ev x y =
  ev.equals x y


(+) : Int -> Int -> Int
(+) x y =
  addInt x y


(-) : Int -> Int -> Int
(-) x y =
  subInt x y


(*) : Int -> Int -> Int
(*) x y = 
  mulInt x y


(/) : Int -> Int -> Int
(/) x y =
  divInt x y


(++) : String -> String -> String
(++) x y = 
  concatString x y
